class Solution {
    public int reverse(int x) {
        int rem = 0, rev = 0;
        
        while (x != 0) {
            rem = x % 10;
    // if reverse is greater than max /10 then after rev*10 its going to exceed the limit , so return 0 here 
   //If rev is exactly Integer.MAX_VALUE / 10, then adding rem could cause overflow if rem is greater than 7 (since 2,147,483,647 ends with a 7).
            if(rev > Integer.MAX_VALUE / 10 || (rev==Integer.MAX_VALUE && rem > 7))
            {
                return 0;
            }

//If rev is less than Integer.MIN_VALUE / 10, then rev * 10 will definitely underflow (become less than -2,147,483,648).
//If rev is exactly Integer.MIN_VALUE / 10, then adding rem could cause underflow if rem is less than -8 (since -2,147,483,648 ends with -8).
             if(rev < Integer.MIN_VALUE / 10 ||(rev==Integer.MIN_VALUE && rem < -8)  )
            {
                return 0;
            }
            rev = rev * 10 + rem;
            x = x / 10;
        }
        
        return rev;
    }
}
